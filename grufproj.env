#!/bin/bash

# 
# Sourced by gruf.bashrc
# Dependency: gruf.bashrc
#
# Commands:
#
# 'chp'  change project
# 	$ chp <project_name>
#  Changes the current project to project_name.  Will fail if project_name
#  is not a directory in $GRUF_PROJECT_PATH.
#
# 'whp'  which project
#	$ whp
#  Prints the current project
#

function proj_perm {
    echo "export GRUF_PROJECT=$GRUF_PROJECT" > $GRUF_PROJECT_FILE
}

function env_set_proj {
    if [ -z $1 ]; then
        echo "Error: env_set_proj: no param"
        return
    fi

    export GRUF_PROJECT=$1
}

function projenv {
    local temporary=$2;

    if [ -z "$1" ]; then
        if [ -f $GRUF_PROJECT_FILE ]; then
            . $GRUF_PROJECT_FILE
            project=$GRUF_PROJECT
        else
            echo "no project given"
            return 1;
        fi
    else
        project=$1
    fi

    if [[ "$project" = "." ]]; then
	project=$(pwd)
    fi

    # remove trailing backslash which causes problems with the code
    # below it
    project=$(echo $project | sed 's/\/$//')

    if [[ "$project" =~ ^"/" ]]; then
        if [ ! -d $project ]; then
            #echo "Invalid project0: $project";
            return 0
        else
            env_set_proj $project
            if [ -z "$temporary" ]; then
                proj_perm
            fi
        fi
    else
    	dir=$(perl -w -e '@dirs = split(/:/, $ENV{GRUF_PROJECT_PATH});
		      	  foreach $d (@dirs) { -d "$d/$ARGV[0]" and
					     print "$d\n" }' $project)
    	if [ ! -z $dir ]; then
	    	env_set_proj "$dir/$project"                 	
            if [ -z "$temporary" ]; then
	        	proj_perm
            fi
		else
            #echo "Invalid project: $project";
            return 0
        fi
    fi
}

#
# Change project.  This is either a fully qualified directory name or
# a directory in your GRUF_PROJECT_PATH.
#
function chp {
    projenv $1
}

#
# Change project but do so only temporarily, i.e., no changes are made
# to $project_file.
#
function chpt {
    if [ -z $1 ]; then
        echo "missing project"
        exit 0
    fi
    projenv $1 local
}

#
# Show the current project
function whp {
    echo "$GRUF_PROJECT"
}
